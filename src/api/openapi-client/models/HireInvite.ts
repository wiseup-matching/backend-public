/* tslint:disable */
/* eslint-disable */
/**
 * Retirement‐Matching API
 * REST endpoints for user auth (via magic‐link), retirees, career elements, reference data, startups, job postings, matching, conversations, and hire invites. Uses a JWT set in a cookie. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HireInvite
 */
export interface HireInvite {
    /**
     * Unique identifier for this invite.
     * @type {string}
     * @memberof HireInvite
     */
    id: string;
    /**
     * Which job posting sent this invite.
     * @type {string}
     * @memberof HireInvite
     */
    jobPostingId: string;
    /**
     * Which retiree was invited.
     * @type {string}
     * @memberof HireInvite
     */
    retireeId: string;
    /**
     * Current state of the invite.
     * @type {string}
     * @memberof HireInvite
     */
    status: HireInviteStatusEnum;
    /**
     * When the invite was sent.
     * @type {Date}
     * @memberof HireInvite
     */
    sentAt?: Date;
    /**
     * When the retiree accepted/declined (if applicable).
     * @type {Date}
     * @memberof HireInvite
     */
    respondedAt?: Date | null;
}


/**
 * @export
 */
export const HireInviteStatusEnum = {
    Pending: 'pending',
    Accepted: 'accepted',
    Declined: 'declined'
} as const;
export type HireInviteStatusEnum = typeof HireInviteStatusEnum[keyof typeof HireInviteStatusEnum];


/**
 * Check if a given object implements the HireInvite interface.
 */
export function instanceOfHireInvite(value: object): value is HireInvite {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('jobPostingId' in value) || value['jobPostingId'] === undefined) return false;
    if (!('retireeId' in value) || value['retireeId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function HireInviteFromJSON(json: any): HireInvite {
    return HireInviteFromJSONTyped(json, false);
}

export function HireInviteFromJSONTyped(json: any, ignoreDiscriminator: boolean): HireInvite {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['_id'],
        'jobPostingId': json['jobPostingId'],
        'retireeId': json['retireeId'],
        'status': json['status'],
        'sentAt': json['sentAt'] == null ? undefined : (new Date(json['sentAt'])),
        'respondedAt': json['respondedAt'] == null ? undefined : (new Date(json['respondedAt'])),
    };
}

export function HireInviteToJSON(json: any): HireInvite {
    return HireInviteToJSONTyped(json, false);
}

export function HireInviteToJSONTyped(value?: HireInvite | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_id': value['id'],
        'jobPostingId': value['jobPostingId'],
        'retireeId': value['retireeId'],
        'status': value['status'],
        'sentAt': value['sentAt'] == null ? undefined : ((value['sentAt']).toISOString()),
        'respondedAt': value['respondedAt'] == null ? undefined : ((value['respondedAt'] as any).toISOString()),
    };
}

